{
	title: Releases
	description: Releases
	date: Sept 15 2017
}

Myrddin 0.2: "9 out of 10 cats agree"
=====================================

Myrddin 0.2 has been released. This release was focused on filing off the
sharp edges shipped with the previous release. But not to worry, there are
still plenty of stabby bits left for the masochists.

![9 out of 10 cats](9of10cats.gif)

Major highlights since 0.2
---------------

Churn, like you were an 18th century housewife making butter.

	$ git diff --stat r0.2.0..HEAD | tail -n 1
	253 files changed, 22508 insertions(+), 7016 deletions(-)
	$ git log --pretty=oneline r0.2.1..HEAD | wc -l
	311	

- Rudimentary GDB line number support.
- Rudimentary Plan 9 Acid debugger support.
- Libhttp is now shipped by default
- Mbld is now parallel. And competitive with ninja.
- Mbld now supports benchmarking via `mbld bench`.
- Type errors now come with sources.
- Performance improvements for many common operations
- An initial look at scoped resoure management, via `auto`.
- The ability to request a function by trait using `impl` statements.
- A complete rewrite of trait resolution, which fixes many known bugs.
- Full system call coverage on Linux, FreeBSD, OpenBSD, and Plan 9.
- Mbld is now competitive in speed with ninja.
- Buffered IO now supports non-file I/O
- For loops now use `:` in place of `in`
- signal() is no longer flaky on linux.
- Asserts are cheaper.
- DNS resolution now times out
- Partial NetBSD support
- Fix several instances of miscompilation.
- Allow duping closures without memory allocations.
- Allow race-free access to the environment within thread spawning
- Build tags may now be versioned.
- Fix DNS for cname records.
- Murmurhash has been replaced with siphash

Breaking Changes
----------------

- std.Ordonly and std.Owronly have been named to std.Oread and std.Owrite.
- `for x in y` became `for x : y`. It's only a warning right now, but it will
  break your code soon.
- Sigpipe is no longer handled by default.
- readv and writev now use iovec structs instead of slices.
- Solsock is now called Solsocket, and it's type changed to match getsockopt.
- Output no longer clutters the source directory, but instead goes into
  `obj/`.
- `mbld test` no longer impliciltly adds files to the test build.
- Custom hash functions return int64, not int32.
- Several unnecessary options (`-d`, `-l`, `-C`, `-M`) were removed from mbld.

New External Libraries and Programs
--------------------------

Yep, there's code thats not part of the main Myrddin distribution.

- [Libtermdraw](https://git.eigenstate.org/git/ori/libtermdraw.git): A library
  for doing curses-like drawing on the terminal.
- [Mparse](https://git.eigenstate.org/git/ori/mparse.git): A library
  written in Myrddin, that parses Myrddin.
- [irc.myr](https://git.eigenstate.org/git/ori/irc.myr.git): A simple IRC
  client, reminiscent of irssi.
- [Sergen](https://git.eigenstate.org/git/ori/sergen.git): A crude reinvention
  of protobufs/thrift.
- [Libwl](https://github.com/michaelforney/libwl): A wayland client library.
- [ddmin](https://github.com/andrewchambers/ddmin): A tool for paring down a
  large testcase into a minimal one.


Thanks to the contributors
--------------------------

In no particular order:

- Quentin Carbonneaux, for good discussion and implementing auto.
- Michael Forney, for bug fixes, code cleanup, and impl statements.
- Andrew Chambers, for testing, bug reports, and ddmin.
- Lucas Gabriel Vuotto, for bug fixes, testing, and siphash.
- Ryan Gonzalez, for bug fixes and code cleanup.
- Carlin Bingham, for fixing some OpenBSD system calls.
- Kamil Rytarowski, for the initial work on NetBSD.
- Roberto E. Vargas Caballero, for ideas and discussion
- Everyone else who complained about my incompetence.

Supported Platforms
-------------------

The 0.2 release comes with an amd64 compiler. The supported platforms are
Linux, OSX, FreeBSD, OpenBSD, and Plan9. There is partial support
for NetBSD.

Packages and Installation
-------------------------

Myrddin 0.2 has been packaged for supported systems. It is also easy to
install from source.

#### From Git

Myrddin is a young language. There are regular fixes to the language and
libraries. Therefore, it's probably a good idea to install it from Git. To
install Myrddin from source:

	git clone git://git.eigenstate.org/git/ori/mc.git
	cd mc
	./configure --prefix=/usr
	make	# gmake on BSD systems
	sudo make install

#### Debian and Ubuntu

Myrddin has been put into a `deb` package. Here is how you can install
it on any Debian based distro:

	wget https://myrlang.org/pkg/myrddin_0.2.0_amd64.deb
	dpkg -i myrddin_0.2.0_amd64.deb

#### Mac OSX

There is a brew tap for OSX. If you have Homebrew installed,
here is how you can use it to install Myrddin:

	brew install oridb/myrddin/myrddin

#### FreeBSD

There is an external makefile for the ports tree. Here is how you
can use it to install Myrddin via the FreeBSD package system:

	git clone git://git.eigenstate.org/git/ori/freebsd-myrddin
	cd freebsd-myrddin/myrddin
	make install

#### OpenBSD

The port for Myrddin is in the OpenBSD ports tree. You can install it
using:

	pkg_add myrddin

#### Plan 9

Because Mercurial is the preferred distribution mechanism for Plan 9, there
is a mirror of the repository on Bitbucket. To install it:

	hg clone https://bitbucket.org/oridb/mc
	cd mc
	mk
	mk install

This release has been tested on 9front. In theory it should work on
any amd64 version of Plan 9 out of the box.

